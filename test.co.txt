//package com.cobalt.hello;

//typealias int = int32;


var s: int32 = t;

var x: int32 = s;

var t: int32 = 1;

/*
// 2
const val t = x;

// 4
var a = y;

// 3
const var y = x + t + 1;

// 1
const val x = 1.5f + 1;

var z = 1;
*/

var k: int32 = 1;

def myfun (x: int, y: float) -> void {
  var a: int32 = k;
  var tt: int32;
  
//  var a = z;
//  var b: int32 = 1;
//  var c = 2.5;
}


/*
*/




//typealias matrix = float32[5];

//var c: float32 = 2.5f;

//var d: bool = false;

//var e: null_t = null;

//typealias int = int32;

//typealias integer = int;

//var t: int;

//val a = 1 + 1.5;

//var b = 1 + 2.5;

//var b: float = 2;

/*
union X {
  x: int;
  y: float;
}

struct Y {
  x: int;
  y: float;
}

*/

//var a: *float[2];

//val b: *int[5];
